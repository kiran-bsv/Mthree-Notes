{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  http;\n  apiUrl = environment.apiUrl;\n  constructor(http) {\n    this.http = http;\n  }\n  getHealth() {\n    return this.http.get(`${this.apiUrl}/health`);\n  }\n  getMetrics() {\n    return this.http.get(`${this.apiUrl}/metrics`);\n  }\n  getAlerts(severity) {\n    let url = `${this.apiUrl}/alerts`;\n    if (severity) {\n      url += `?severity=${severity}`;\n    }\n    return this.http.get(url);\n  }\n  getConfig() {\n    return this.http.get(`${this.apiUrl}/config`);\n  }\n  simulateCpuLoad(duration) {\n    return this.http.get(`${this.apiUrl}/simulate/cpu?duration=${duration}`);\n  }\n  simulateMemoryLoad(sizeMb, duration) {\n    return this.http.get(`${this.apiUrl}/simulate/memory?size_mb=${sizeMb}&duration=${duration}`);\n  }\n  simulateError(type) {\n    return this.http.get(`${this.apiUrl}/simulate/error?type=${type}`);\n  }\n  static ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ApiService","http","apiUrl","constructor","getHealth","get","getMetrics","getAlerts","severity","url","getConfig","simulateCpuLoad","duration","simulateMemoryLoad","sizeMb","simulateError","type","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/kiran/Desktop/Mthree-Notes/sre-app-angular/angular-ui/src/app/core/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { SystemMetrics } from '../models/metric.model';\nimport { Alert } from '../models/alert.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getHealth(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/health`);\n  }\n\n  getMetrics(): Observable<SystemMetrics> {\n    return this.http.get<SystemMetrics>(`${this.apiUrl}/metrics`);\n  }\n\n  getAlerts(severity?: string): Observable<Alert[]> {\n    let url = `${this.apiUrl}/alerts`;\n    if (severity) {\n      url += `?severity=${severity}`;\n    }\n    return this.http.get<Alert[]>(url);\n  }\n\n  getConfig(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/config`);\n  }\n\n  simulateCpuLoad(duration: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/simulate/cpu?duration=${duration}`);\n  }\n\n  simulateMemoryLoad(sizeMb: number, duration: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/simulate/memory?size_mb=${sizeMb}&duration=${duration}`);\n  }\n\n  simulateError(type: 'client' | 'server'): Observable<any> {\n    return this.http.get(`${this.apiUrl}/simulate/error?type=${type}`);\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAO/D,OAAM,MAAOC,UAAU;EAGDC,IAAA;EAFZC,MAAM,GAAGH,WAAW,CAACG,MAAM;EAEnCC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCG,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,SAAS,CAAC;EAC/C;EAEAI,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAgB,GAAG,IAAI,CAACH,MAAM,UAAU,CAAC;EAC/D;EAEAK,SAASA,CAACC,QAAiB;IACzB,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,SAAS;IACjC,IAAIM,QAAQ,EAAE;MACZC,GAAG,IAAI,aAAaD,QAAQ,EAAE;;IAEhC,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAUI,GAAG,CAAC;EACpC;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,SAAS,CAAC;EAC/C;EAEAS,eAAeA,CAACC,QAAgB;IAC9B,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,0BAA0BU,QAAQ,EAAE,CAAC;EAC1E;EAEAC,kBAAkBA,CAACC,MAAc,EAAEF,QAAgB;IACjD,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,4BAA4BY,MAAM,aAAaF,QAAQ,EAAE,CAAC;EAC/F;EAEAG,aAAaA,CAACC,IAAyB;IACrC,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,wBAAwBc,IAAI,EAAE,CAAC;EACpE;;qBAnCWhB,UAAU,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAVpB,UAAU;IAAAqB,OAAA,EAAVrB,UAAU,CAAAsB,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}