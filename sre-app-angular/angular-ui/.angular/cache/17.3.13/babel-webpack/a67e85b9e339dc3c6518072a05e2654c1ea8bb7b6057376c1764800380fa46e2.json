{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/metrics.service\";\nimport * as i2 from \"../../core/services/alerts.service\";\nimport * as i3 from \"../../core/services/api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../shared/components/metric-card/metric-card.component\";\nimport * as i7 from \"../../shared/components/alert-list/alert-list.component\";\nconst _c0 = a0 => ({\n  \"active\": a0\n});\nexport class DashboardComponent {\n  metricsService;\n  alertsService;\n  apiService;\n  metrics$;\n  alerts$;\n  // alerts$: Observable<Alert[]> = this.alertsService.getAlerts().pipe(\n  //   map(alerts => alerts ?? []) // Converts `null` to an empty array\n  // );\n  currentSeverityFilter = '';\n  isTestRunning = false;\n  // Simulation controls\n  cpuTestDuration = 5;\n  memoryTestSize = 10;\n  memoryTestDuration = 5;\n  errorType = 'client';\n  constructor(metricsService, alertsService, apiService) {\n    this.metricsService = metricsService;\n    this.alertsService = alertsService;\n    this.apiService = apiService;\n    this.metrics$ = this.metricsService.metrics$;\n    this.alerts$ = this.alertsService.alerts$;\n  }\n  ngOnInit() {\n    // Initial data fetch\n    this.refreshMetrics();\n    this.alertsService.refreshAlerts();\n  }\n  refreshMetrics() {\n    this.metricsService.refreshMetrics();\n  }\n  filterAlerts(severity) {\n    this.currentSeverityFilter = severity;\n    this.alertsService.refreshAlerts(severity);\n  }\n  acknowledgeAlert(alertId) {\n    this.alertsService.acknowledgeAlert(alertId);\n  }\n  openSettings() {\n    // In a real app, this would open a settings dialog\n    alert('Settings functionality would go here');\n  }\n  simulateCpuLoad() {\n    this.isTestRunning = true;\n    this.apiService.simulateCpuLoad(this.cpuTestDuration).subscribe({\n      next: response => {\n        console.log('CPU test response:', response);\n        this.isTestRunning = false;\n        // Refresh metrics after test\n        setTimeout(() => this.refreshMetrics(), 1000);\n      },\n      error: error => {\n        console.error('CPU test error:', error);\n        this.isTestRunning = false;\n      }\n    });\n  }\n  simulateMemoryLoad() {\n    this.isTestRunning = true;\n    this.apiService.simulateMemoryLoad(this.memoryTestSize, this.memoryTestDuration).subscribe({\n      next: response => {\n        console.log('Memory test response:', response);\n        this.isTestRunning = false;\n        // Refresh metrics after test\n        setTimeout(() => this.refreshMetrics(), 1000);\n      },\n      error: error => {\n        console.error('Memory test error:', error);\n        this.isTestRunning = false;\n      }\n    });\n  }\n  simulateError() {\n    this.isTestRunning = true;\n    this.apiService.simulateError(this.errorType).subscribe({\n      next: response => {\n        // This shouldn't happen\n        console.log('Error simulation response:', response);\n        this.isTestRunning = false;\n      },\n      error: error => {\n        console.log('Error simulated successfully:', error);\n        this.isTestRunning = false;\n        // Refresh alerts after error\n        setTimeout(() => this.alertsService.refreshAlerts(), 1000);\n      }\n    });\n  }\n  static ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MetricsService), i0.ɵɵdirectiveInject(i2.AlertsService), i0.ɵɵdirectiveInject(i3.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 77,\n    vars: 43,\n    consts: [[1, \"dashboard-container\"], [1, \"dashboard-header\"], [1, \"actions\"], [3, \"click\"], [1, \"dashboard-content\"], [1, \"metrics-section\"], [1, \"metrics-grid\"], [\"title\", \"CPU Usage\", \"unit\", \"%\", 3, \"value\", \"thresholdWarning\", \"thresholdCritical\"], [\"title\", \"Memory Usage\", \"unit\", \"%\", 3, \"value\", \"thresholdWarning\", \"thresholdCritical\"], [\"title\", \"Disk Usage\", \"unit\", \"%\", 3, \"value\", \"thresholdWarning\", \"thresholdCritical\"], [\"title\", \"Network Sent\", \"unit\", \"MB\", 3, \"value\"], [\"title\", \"Network Received\", \"unit\", \"MB\", 3, \"value\"], [1, \"alerts-section\"], [1, \"alerts-filter\"], [3, \"click\", \"ngClass\"], [3, \"acknowledge\", \"alerts\"], [1, \"simulation-section\"], [1, \"simulation-grid\"], [1, \"simulation-card\"], [1, \"form-group\"], [\"for\", \"cpu-duration\"], [\"id\", \"cpu-duration\", \"type\", \"number\", \"min\", \"1\", \"max\", \"30\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\", \"disabled\"], [\"for\", \"memory-size\"], [\"id\", \"memory-size\", \"type\", \"number\", \"min\", \"1\", \"max\", \"100\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"memory-duration\"], [\"id\", \"memory-duration\", \"type\", \"number\", \"min\", \"1\", \"max\", \"30\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"error-type\"], [\"id\", \"error-type\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"client\"], [\"value\", \"server\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"SRE Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_5_listener() {\n          return ctx.refreshMetrics();\n        });\n        i0.ɵɵtext(6, \"Refresh Metrics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n          return ctx.openSettings();\n        });\n        i0.ɵɵtext(8, \"Settings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"h2\");\n        i0.ɵɵtext(12, \"System Metrics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelement(14, \"app-metric-card\", 7);\n        i0.ɵɵpipe(15, \"async\");\n        i0.ɵɵelement(16, \"app-metric-card\", 8);\n        i0.ɵɵpipe(17, \"async\");\n        i0.ɵɵelement(18, \"app-metric-card\", 9);\n        i0.ɵɵpipe(19, \"async\");\n        i0.ɵɵelement(20, \"app-metric-card\", 10);\n        i0.ɵɵpipe(21, \"async\");\n        i0.ɵɵelement(22, \"app-metric-card\", 11);\n        i0.ɵɵpipe(23, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 12)(25, \"h2\");\n        i0.ɵɵtext(26, \"Recent Alerts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 13)(28, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_28_listener() {\n          return ctx.filterAlerts(\"\");\n        });\n        i0.ɵɵtext(29, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_30_listener() {\n          return ctx.filterAlerts(\"critical\");\n        });\n        i0.ɵɵtext(31, \"Critical\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_32_listener() {\n          return ctx.filterAlerts(\"warning\");\n        });\n        i0.ɵɵtext(33, \"Warning\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_34_listener() {\n          return ctx.filterAlerts(\"info\");\n        });\n        i0.ɵɵtext(35, \"Info\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"app-alert-list\", 15);\n        i0.ɵɵpipe(37, \"async\");\n        i0.ɵɵlistener(\"acknowledge\", function DashboardComponent_Template_app_alert_list_acknowledge_36_listener($event) {\n          return ctx.acknowledgeAlert($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 16)(39, \"h2\");\n        i0.ɵɵtext(40, \"Test Utilities\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 17)(42, \"div\", 18)(43, \"h3\");\n        i0.ɵɵtext(44, \"CPU Load Test\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 19)(46, \"label\", 20);\n        i0.ɵɵtext(47, \"Duration (seconds):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"input\", 21);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_48_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.cpuTestDuration, $event) || (ctx.cpuTestDuration = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_49_listener() {\n          return ctx.simulateCpuLoad();\n        });\n        i0.ɵɵtext(50, \"Run Test\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"div\", 18)(52, \"h3\");\n        i0.ɵɵtext(53, \"Memory Load Test\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"div\", 19)(55, \"label\", 23);\n        i0.ɵɵtext(56, \"Size (MB):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"input\", 24);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_57_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.memoryTestSize, $event) || (ctx.memoryTestSize = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(58, \"div\", 19)(59, \"label\", 25);\n        i0.ɵɵtext(60, \"Duration (seconds):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"input\", 26);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_61_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.memoryTestDuration, $event) || (ctx.memoryTestDuration = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(62, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_62_listener() {\n          return ctx.simulateMemoryLoad();\n        });\n        i0.ɵɵtext(63, \"Run Test\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(64, \"div\", 18)(65, \"h3\");\n        i0.ɵɵtext(66, \"Error Simulation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 19)(68, \"label\", 27);\n        i0.ɵɵtext(69, \"Error Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"select\", 28);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_70_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.errorType, $event) || (ctx.errorType = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(71, \"option\", 29);\n        i0.ɵɵtext(72, \"Client Error (400)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"option\", 30);\n        i0.ɵɵtext(74, \"Server Error (500)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(75, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_75_listener() {\n          return ctx.simulateError();\n        });\n        i0.ɵɵtext(76, \"Simulate Error\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_0_0;\n        let tmp_3_0;\n        let tmp_6_0;\n        let tmp_9_0;\n        let tmp_10_0;\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"value\", ((tmp_0_0 = i0.ɵɵpipeBind1(15, 23, ctx.metrics$)) == null ? null : tmp_0_0.cpu_usage) || 0)(\"thresholdWarning\", 70)(\"thresholdCritical\", 90);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ((tmp_3_0 = i0.ɵɵpipeBind1(17, 25, ctx.metrics$)) == null ? null : tmp_3_0.memory_usage) || 0)(\"thresholdWarning\", 80)(\"thresholdCritical\", 95);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ((tmp_6_0 = i0.ɵɵpipeBind1(19, 27, ctx.metrics$)) == null ? null : tmp_6_0.disk_usage) || 0)(\"thresholdWarning\", 75)(\"thresholdCritical\", 90);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", (((tmp_9_0 = i0.ɵɵpipeBind1(21, 29, ctx.metrics$)) == null ? null : tmp_9_0.network_io == null ? null : tmp_9_0.network_io.sent_bytes) || 0) / (1024 * 1024));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", (((tmp_10_0 = i0.ɵɵpipeBind1(23, 31, ctx.metrics$)) == null ? null : tmp_10_0.network_io == null ? null : tmp_10_0.network_io.received_bytes) || 0) / (1024 * 1024));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(35, _c0, ctx.currentSeverityFilter === \"\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(37, _c0, ctx.currentSeverityFilter === \"critical\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(39, _c0, ctx.currentSeverityFilter === \"warning\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(41, _c0, ctx.currentSeverityFilter === \"info\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"alerts\", i0.ɵɵpipeBind1(37, 33, ctx.alerts$));\n        i0.ɵɵadvance(12);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cpuTestDuration);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.isTestRunning);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.memoryTestSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.memoryTestDuration);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.isTestRunning);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.errorType);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.isTestRunning);\n      }\n    },\n    dependencies: [i4.NgClass, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.MinValidator, i5.MaxValidator, i5.NgModel, i6.MetricCardComponent, i7.AlertListComponent, i4.AsyncPipe],\n    styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n      padding: 16px;\\n      max-width: 1200px;\\n      margin: 0 auto;\\n    }\\n    .dashboard-header[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 24px;\\n    }\\n    .dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n      margin: 0;\\n    }\\n    .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n      margin-left: 8px;\\n      padding: 8px 16px;\\n      background-color: #2196f3;\\n      color: white;\\n      border: none;\\n      border-radius: 4px;\\n      cursor: pointer;\\n    }\\n    .metrics-section[_ngcontent-%COMP%], .alerts-section[_ngcontent-%COMP%], .simulation-section[_ngcontent-%COMP%] {\\n      margin-bottom: 32px;\\n    }\\n    .metrics-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .alerts-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .simulation-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n      margin-top: 0;\\n      margin-bottom: 16px;\\n      font-size: 20px;\\n    }\\n    .metrics-grid[_ngcontent-%COMP%] {\\n      display: grid;\\n      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\\n      gap: 16px;\\n    }\\n    .alerts-filter[_ngcontent-%COMP%] {\\n      margin-bottom: 16px;\\n    }\\n    .alerts-filter[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n      margin-right: 8px;\\n      padding: 4px 12px;\\n      background-color: #f0f0f0;\\n      border: 1px solid #ddd;\\n      border-radius: 4px;\\n      cursor: pointer;\\n    }\\n    .alerts-filter[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%] {\\n      background-color: #2196f3;\\n      color: white;\\n      border-color: #2196f3;\\n    }\\n    .simulation-grid[_ngcontent-%COMP%] {\\n      display: grid;\\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n      gap: 16px;\\n    }\\n    .simulation-card[_ngcontent-%COMP%] {\\n      padding: 16px;\\n      background-color: #f9f9f9;\\n      border-radius: 8px;\\n      border: 1px solid #eee;\\n    }\\n    .simulation-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n      margin-top: 0;\\n      margin-bottom: 16px;\\n      font-size: 16px;\\n    }\\n    .form-group[_ngcontent-%COMP%] {\\n      margin-bottom: 12px;\\n    }\\n    .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 4px;\\n      font-size: 14px;\\n    }\\n    .form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 8px;\\n      border: 1px solid #ddd;\\n      border-radius: 4px;\\n    }\\n    .simulation-card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 8px 16px;\\n      background-color: #4caf50;\\n      color: white;\\n      border: none;\\n      border-radius: 4px;\\n      cursor: pointer;\\n    }\\n    .simulation-card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n      background-color: #ccc;\\n      cursor: not-allowed;\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUNJO01BQ0UsYUFBYTtNQUNiLGlCQUFpQjtNQUNqQixjQUFjO0lBQ2hCO0lBQ0E7TUFDRSxhQUFhO01BQ2IsOEJBQThCO01BQzlCLG1CQUFtQjtNQUNuQixtQkFBbUI7SUFDckI7SUFDQTtNQUNFLFNBQVM7SUFDWDtJQUNBO01BQ0UsZ0JBQWdCO01BQ2hCLGlCQUFpQjtNQUNqQix5QkFBeUI7TUFDekIsWUFBWTtNQUNaLFlBQVk7TUFDWixrQkFBa0I7TUFDbEIsZUFBZTtJQUNqQjtJQUNBO01BQ0UsbUJBQW1CO0lBQ3JCO0lBQ0E7TUFDRSxhQUFhO01BQ2IsbUJBQW1CO01BQ25CLGVBQWU7SUFDakI7SUFDQTtNQUNFLGFBQWE7TUFDYiw0REFBNEQ7TUFDNUQsU0FBUztJQUNYO0lBQ0E7TUFDRSxtQkFBbUI7SUFDckI7SUFDQTtNQUNFLGlCQUFpQjtNQUNqQixpQkFBaUI7TUFDakIseUJBQXlCO01BQ3pCLHNCQUFzQjtNQUN0QixrQkFBa0I7TUFDbEIsZUFBZTtJQUNqQjtJQUNBO01BQ0UseUJBQXlCO01BQ3pCLFlBQVk7TUFDWixxQkFBcUI7SUFDdkI7SUFDQTtNQUNFLGFBQWE7TUFDYiw0REFBNEQ7TUFDNUQsU0FBUztJQUNYO0lBQ0E7TUFDRSxhQUFhO01BQ2IseUJBQXlCO01BQ3pCLGtCQUFrQjtNQUNsQixzQkFBc0I7SUFDeEI7SUFDQTtNQUNFLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsZUFBZTtJQUNqQjtJQUNBO01BQ0UsbUJBQW1CO0lBQ3JCO0lBQ0E7TUFDRSxjQUFjO01BQ2Qsa0JBQWtCO01BQ2xCLGVBQWU7SUFDakI7SUFDQTtNQUNFLFdBQVc7TUFDWCxZQUFZO01BQ1osc0JBQXNCO01BQ3RCLGtCQUFrQjtJQUNwQjtJQUNBO01BQ0UsV0FBVztNQUNYLGlCQUFpQjtNQUNqQix5QkFBeUI7TUFDekIsWUFBWTtNQUNaLFlBQVk7TUFDWixrQkFBa0I7TUFDbEIsZUFBZTtJQUNqQjtJQUNBO01BQ0Usc0JBQXNCO01BQ3RCLG1CQUFtQjtJQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5kYXNoYm9hcmQtY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgICAuZGFzaGJvYXJkLWhlYWRlciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgfVxuICAgIC5kYXNoYm9hcmQtaGVhZGVyIGgxIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gICAgLmFjdGlvbnMgYnV0dG9uIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gICAgICBwYWRkaW5nOiA4cHggMTZweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMTk2ZjM7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIC5tZXRyaWNzLXNlY3Rpb24sIC5hbGVydHMtc2VjdGlvbiwgLnNpbXVsYXRpb24tc2VjdGlvbiB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICAgIH1cbiAgICAubWV0cmljcy1zZWN0aW9uIGgyLCAuYWxlcnRzLXNlY3Rpb24gaDIsIC5zaW11bGF0aW9uLXNlY3Rpb24gaDIge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICAgIC5tZXRyaWNzLWdyaWQge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDIwMHB4LCAxZnIpKTtcbiAgICAgIGdhcDogMTZweDtcbiAgICB9XG4gICAgLmFsZXJ0cy1maWx0ZXIge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICB9XG4gICAgLmFsZXJ0cy1maWx0ZXIgYnV0dG9uIHtcbiAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgICAgcGFkZGluZzogNHB4IDEycHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLmFsZXJ0cy1maWx0ZXIgYnV0dG9uLmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NmYzO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMjE5NmYzO1xuICAgIH1cbiAgICAuc2ltdWxhdGlvbi1ncmlkIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgzMDBweCwgMWZyKSk7XG4gICAgICBnYXA6IDE2cHg7XG4gICAgfVxuICAgIC5zaW11bGF0aW9uLWNhcmQge1xuICAgICAgcGFkZGluZzogMTZweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlO1xuICAgIH1cbiAgICAuc2ltdWxhdGlvbi1jYXJkIGgzIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbiAgICAuZm9ybS1ncm91cCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICAgIH1cbiAgICAuZm9ybS1ncm91cCBsYWJlbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1ib3R0b206IDRweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gICAgLmZvcm0tZ3JvdXAgaW5wdXQsIC5mb3JtLWdyb3VwIHNlbGVjdCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDhweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgfVxuICAgIC5zaW11bGF0aW9uLWNhcmQgYnV0dG9uIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogOHB4IDE2cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuc2ltdWxhdGlvbi1jYXJkIGJ1dHRvbjpkaXNhYmxlZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["DashboardComponent","metricsService","alertsService","apiService","metrics$","alerts$","currentSeverityFilter","isTestRunning","cpuTestDuration","memoryTestSize","memoryTestDuration","errorType","constructor","ngOnInit","refreshMetrics","refreshAlerts","filterAlerts","severity","acknowledgeAlert","alertId","openSettings","alert","simulateCpuLoad","subscribe","next","response","console","log","setTimeout","error","simulateMemoryLoad","simulateError","i0","ɵɵdirectiveInject","i1","MetricsService","i2","AlertsService","i3","ApiService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_Template_button_click_5_listener","DashboardComponent_Template_button_click_7_listener","ɵɵelement","DashboardComponent_Template_button_click_28_listener","DashboardComponent_Template_button_click_30_listener","DashboardComponent_Template_button_click_32_listener","DashboardComponent_Template_button_click_34_listener","DashboardComponent_Template_app_alert_list_acknowledge_36_listener","$event","ɵɵtwoWayListener","DashboardComponent_Template_input_ngModelChange_48_listener","ɵɵtwoWayBindingSet","DashboardComponent_Template_button_click_49_listener","DashboardComponent_Template_input_ngModelChange_57_listener","DashboardComponent_Template_input_ngModelChange_61_listener","DashboardComponent_Template_button_click_62_listener","DashboardComponent_Template_select_ngModelChange_70_listener","DashboardComponent_Template_button_click_75_listener","ɵɵadvance","ɵɵproperty","tmp_0_0","ɵɵpipeBind1","cpu_usage","tmp_3_0","memory_usage","tmp_6_0","disk_usage","tmp_9_0","network_io","sent_bytes","tmp_10_0","received_bytes","ɵɵpureFunction1","_c0","ɵɵtwoWayProperty"],"sources":["/home/kiran/Desktop/Mthree-Notes/sre-app-angular/angular-ui/src/app/features/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MetricsService } from '../../core/services/metrics.service';\nimport { AlertsService } from '../../core/services/alerts.service';\nimport { ApiService } from '../../core/services/api.service';\nimport { SystemMetrics } from '../../core/models/metric.model';\nimport { Alert } from '../../core/models/alert.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    <div class=\"dashboard-container\">\n      <header class=\"dashboard-header\">\n        <h1>SRE Dashboard</h1>\n        <div class=\"actions\">\n          <button (click)=\"refreshMetrics()\">Refresh Metrics</button>\n          <button (click)=\"openSettings()\">Settings</button>\n        </div>\n      </header>\n\n      <div class=\"dashboard-content\">\n        <div class=\"metrics-section\">\n          <h2>System Metrics</h2>\n          <div class=\"metrics-grid\">\n            <app-metric-card\n              title=\"CPU Usage\"\n              [value]=\"(metrics$ | async)?.cpu_usage || 0\"\n              unit=\"%\"\n              [thresholdWarning]=\"70\"\n              [thresholdCritical]=\"90\"\n            ></app-metric-card>\n            \n            <app-metric-card\n              title=\"Memory Usage\"\n              [value]=\"(metrics$ | async)?.memory_usage || 0\"\n              unit=\"%\"\n              [thresholdWarning]=\"80\"\n              [thresholdCritical]=\"95\"\n            ></app-metric-card>\n            \n            <app-metric-card\n              title=\"Disk Usage\"\n              [value]=\"(metrics$ | async)?.disk_usage || 0\"\n              unit=\"%\"\n              [thresholdWarning]=\"75\"\n              [thresholdCritical]=\"90\"\n            ></app-metric-card>\n            \n            <app-metric-card\n              title=\"Network Sent\"\n              [value]=\"((metrics$ | async)?.network_io?.sent_bytes || 0) / (1024 * 1024)\"\n              unit=\"MB\"\n            ></app-metric-card>\n            \n            <app-metric-card\n              title=\"Network Received\"\n              [value]=\"((metrics$ | async)?.network_io?.received_bytes || 0) / (1024 * 1024)\"\n              unit=\"MB\"\n            ></app-metric-card>\n          </div>\n        </div>\n\n        <div class=\"alerts-section\">\n          <h2>Recent Alerts</h2>\n          <div class=\"alerts-filter\">\n            <button \n              [ngClass]=\"{'active': currentSeverityFilter === ''}\"\n              (click)=\"filterAlerts('')\">All</button>\n            <button \n              [ngClass]=\"{'active': currentSeverityFilter === 'critical'}\"\n              (click)=\"filterAlerts('critical')\">Critical</button>\n            <button \n              [ngClass]=\"{'active': currentSeverityFilter === 'warning'}\"\n              (click)=\"filterAlerts('warning')\">Warning</button>\n            <button \n              [ngClass]=\"{'active': currentSeverityFilter === 'info'}\"\n              (click)=\"filterAlerts('info')\">Info</button>\n          </div>\n          <app-alert-list\n            [alerts]=\"alerts$ | async \"\n            (acknowledge)=\"acknowledgeAlert($event)\"\n          ></app-alert-list>\n        </div>\n\n        <div class=\"simulation-section\">\n          <h2>Test Utilities</h2>\n          <div class=\"simulation-grid\">\n            <div class=\"simulation-card\">\n              <h3>CPU Load Test</h3>\n              <div class=\"form-group\">\n                <label for=\"cpu-duration\">Duration (seconds):</label>\n                <input id=\"cpu-duration\" type=\"number\" [(ngModel)]=\"cpuTestDuration\" min=\"1\" max=\"30\">\n              </div>\n              <button [disabled]=\"isTestRunning\" (click)=\"simulateCpuLoad()\">Run Test</button>\n            </div>\n            \n            <div class=\"simulation-card\">\n              <h3>Memory Load Test</h3>\n              <div class=\"form-group\">\n                <label for=\"memory-size\">Size (MB):</label>\n                <input id=\"memory-size\" type=\"number\" [(ngModel)]=\"memoryTestSize\" min=\"1\" max=\"100\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"memory-duration\">Duration (seconds):</label>\n                <input id=\"memory-duration\" type=\"number\" [(ngModel)]=\"memoryTestDuration\" min=\"1\" max=\"30\">\n              </div>\n              <button [disabled]=\"isTestRunning\" (click)=\"simulateMemoryLoad()\">Run Test</button>\n            </div>\n            \n            <div class=\"simulation-card\">\n              <h3>Error Simulation</h3>\n              <div class=\"form-group\">\n                <label for=\"error-type\">Error Type:</label>\n                <select id=\"error-type\" [(ngModel)]=\"errorType\">\n                  <option value=\"client\">Client Error (400)</option>\n                  <option value=\"server\">Server Error (500)</option>\n                </select>\n              </div>\n              <button [disabled]=\"isTestRunning\" (click)=\"simulateError()\">Simulate Error</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .dashboard-container {\n      padding: 16px;\n      max-width: 1200px;\n      margin: 0 auto;\n    }\n    .dashboard-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 24px;\n    }\n    .dashboard-header h1 {\n      margin: 0;\n    }\n    .actions button {\n      margin-left: 8px;\n      padding: 8px 16px;\n      background-color: #2196f3;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .metrics-section, .alerts-section, .simulation-section {\n      margin-bottom: 32px;\n    }\n    .metrics-section h2, .alerts-section h2, .simulation-section h2 {\n      margin-top: 0;\n      margin-bottom: 16px;\n      font-size: 20px;\n    }\n    .metrics-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n      gap: 16px;\n    }\n    .alerts-filter {\n      margin-bottom: 16px;\n    }\n    .alerts-filter button {\n      margin-right: 8px;\n      padding: 4px 12px;\n      background-color: #f0f0f0;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .alerts-filter button.active {\n      background-color: #2196f3;\n      color: white;\n      border-color: #2196f3;\n    }\n    .simulation-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: 16px;\n    }\n    .simulation-card {\n      padding: 16px;\n      background-color: #f9f9f9;\n      border-radius: 8px;\n      border: 1px solid #eee;\n    }\n    .simulation-card h3 {\n      margin-top: 0;\n      margin-bottom: 16px;\n      font-size: 16px;\n    }\n    .form-group {\n      margin-bottom: 12px;\n    }\n    .form-group label {\n      display: block;\n      margin-bottom: 4px;\n      font-size: 14px;\n    }\n    .form-group input, .form-group select {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n    }\n    .simulation-card button {\n      width: 100%;\n      padding: 8px 16px;\n      background-color: #4caf50;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .simulation-card button:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n  `]\n})\nexport class DashboardComponent implements OnInit {\n  metrics$: Observable<SystemMetrics | null>;\n  alerts$: Observable<Alert[]>;\n  // alerts$: Observable<Alert[]> = this.alertsService.getAlerts().pipe(\n  //   map(alerts => alerts ?? []) // Converts `null` to an empty array\n  // );\n  \n  \n  currentSeverityFilter: string = '';\n  isTestRunning: boolean = false;\n  \n  // Simulation controls\n  cpuTestDuration: number = 5;\n  memoryTestSize: number = 10;\n  memoryTestDuration: number = 5;\n  errorType: 'client' | 'server' = 'client';\n  \n  constructor(\n    private metricsService: MetricsService,\n    private alertsService: AlertsService,\n    private apiService: ApiService\n  ) {\n    this.metrics$ = this.metricsService.metrics$;\n    this.alerts$ = this.alertsService.alerts$;\n  }\n  \n  ngOnInit(): void {\n    // Initial data fetch\n    this.refreshMetrics();\n    this.alertsService.refreshAlerts();\n  }\n  \n  refreshMetrics(): void {\n    this.metricsService.refreshMetrics();\n  }\n  \n  filterAlerts(severity: string): void {\n    this.currentSeverityFilter = severity;\n    this.alertsService.refreshAlerts(severity);\n  }\n  \n  acknowledgeAlert(alertId: number): void {\n    this.alertsService.acknowledgeAlert(alertId);\n  }\n  \n  openSettings(): void {\n    // In a real app, this would open a settings dialog\n    alert('Settings functionality would go here');\n  }\n  \n  simulateCpuLoad(): void {\n    this.isTestRunning = true;\n    this.apiService.simulateCpuLoad(this.cpuTestDuration).subscribe({\n      next: (response) => {\n        console.log('CPU test response:', response);\n        this.isTestRunning = false;\n        // Refresh metrics after test\n        setTimeout(() => this.refreshMetrics(), 1000);\n      },\n      error: (error) => {\n        console.error('CPU test error:', error);\n        this.isTestRunning = false;\n      }\n    });\n  }\n  \n  simulateMemoryLoad(): void {\n    this.isTestRunning = true;\n    this.apiService.simulateMemoryLoad(this.memoryTestSize, this.memoryTestDuration).subscribe({\n      next: (response) => {\n        console.log('Memory test response:', response);\n        this.isTestRunning = false;\n        // Refresh metrics after test\n        setTimeout(() => this.refreshMetrics(), 1000);\n      },\n      error: (error) => {\n        console.error('Memory test error:', error);\n        this.isTestRunning = false;\n      }\n    });\n  }\n  \n  simulateError(): void {\n    this.isTestRunning = true;\n    this.apiService.simulateError(this.errorType).subscribe({\n      next: (response) => {\n        // This shouldn't happen\n        console.log('Error simulation response:', response);\n        this.isTestRunning = false;\n      },\n      error: (error) => {\n        console.log('Error simulated successfully:', error);\n        this.isTestRunning = false;\n        // Refresh alerts after error\n        setTimeout(() => this.alertsService.refreshAlerts(), 1000);\n      }\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;AAgOA,OAAM,MAAOA,kBAAkB;EAkBnBC,cAAA;EACAC,aAAA;EACAC,UAAA;EAnBVC,QAAQ;EACRC,OAAO;EACP;EACA;EACA;EAGAC,qBAAqB,GAAW,EAAE;EAClCC,aAAa,GAAY,KAAK;EAE9B;EACAC,eAAe,GAAW,CAAC;EAC3BC,cAAc,GAAW,EAAE;EAC3BC,kBAAkB,GAAW,CAAC;EAC9BC,SAAS,GAAwB,QAAQ;EAEzCC,YACUX,cAA8B,EAC9BC,aAA4B,EAC5BC,UAAsB;IAFtB,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,UAAU,GAAVA,UAAU;IAElB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,cAAc,CAACG,QAAQ;IAC5C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACH,aAAa,CAACG,OAAO;EAC3C;EAEAQ,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACZ,aAAa,CAACa,aAAa,EAAE;EACpC;EAEAD,cAAcA,CAAA;IACZ,IAAI,CAACb,cAAc,CAACa,cAAc,EAAE;EACtC;EAEAE,YAAYA,CAACC,QAAgB;IAC3B,IAAI,CAACX,qBAAqB,GAAGW,QAAQ;IACrC,IAAI,CAACf,aAAa,CAACa,aAAa,CAACE,QAAQ,CAAC;EAC5C;EAEAC,gBAAgBA,CAACC,OAAe;IAC9B,IAAI,CAACjB,aAAa,CAACgB,gBAAgB,CAACC,OAAO,CAAC;EAC9C;EAEAC,YAAYA,CAAA;IACV;IACAC,KAAK,CAAC,sCAAsC,CAAC;EAC/C;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACf,aAAa,GAAG,IAAI;IACzB,IAAI,CAACJ,UAAU,CAACmB,eAAe,CAAC,IAAI,CAACd,eAAe,CAAC,CAACe,SAAS,CAAC;MAC9DC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;QAC3C,IAAI,CAAClB,aAAa,GAAG,KAAK;QAC1B;QACAqB,UAAU,CAAC,MAAM,IAAI,CAACd,cAAc,EAAE,EAAE,IAAI,CAAC;MAC/C,CAAC;MACDe,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvC,IAAI,CAACtB,aAAa,GAAG,KAAK;MAC5B;KACD,CAAC;EACJ;EAEAuB,kBAAkBA,CAAA;IAChB,IAAI,CAACvB,aAAa,GAAG,IAAI;IACzB,IAAI,CAACJ,UAAU,CAAC2B,kBAAkB,CAAC,IAAI,CAACrB,cAAc,EAAE,IAAI,CAACC,kBAAkB,CAAC,CAACa,SAAS,CAAC;MACzFC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;QAC9C,IAAI,CAAClB,aAAa,GAAG,KAAK;QAC1B;QACAqB,UAAU,CAAC,MAAM,IAAI,CAACd,cAAc,EAAE,EAAE,IAAI,CAAC;MAC/C,CAAC;MACDe,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,IAAI,CAACtB,aAAa,GAAG,KAAK;MAC5B;KACD,CAAC;EACJ;EAEAwB,aAAaA,CAAA;IACX,IAAI,CAACxB,aAAa,GAAG,IAAI;IACzB,IAAI,CAACJ,UAAU,CAAC4B,aAAa,CAAC,IAAI,CAACpB,SAAS,CAAC,CAACY,SAAS,CAAC;MACtDC,IAAI,EAAGC,QAAQ,IAAI;QACjB;QACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;QACnD,IAAI,CAAClB,aAAa,GAAG,KAAK;MAC5B,CAAC;MACDsB,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,KAAK,CAAC;QACnD,IAAI,CAACtB,aAAa,GAAG,KAAK;QAC1B;QACAqB,UAAU,CAAC,MAAM,IAAI,CAAC1B,aAAa,CAACa,aAAa,EAAE,EAAE,IAAI,CAAC;MAC5D;KACD,CAAC;EACJ;;qBAjGWf,kBAAkB,EAAAgC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,UAAA;EAAA;;UAAlBvC,kBAAkB;IAAAwC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAlNvBd,EAFJ,CAAAgB,cAAA,aAAiC,gBACE,SAC3B;QAAAhB,EAAA,CAAAiB,MAAA,oBAAa;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAEpBlB,EADF,CAAAgB,cAAA,aAAqB,gBACgB;QAA3BhB,EAAA,CAAAmB,UAAA,mBAAAC,oDAAA;UAAA,OAASL,GAAA,CAAAjC,cAAA,EAAgB;QAAA,EAAC;QAACkB,EAAA,CAAAiB,MAAA,sBAAe;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QAC3DlB,EAAA,CAAAgB,cAAA,gBAAiC;QAAzBhB,EAAA,CAAAmB,UAAA,mBAAAE,oDAAA;UAAA,OAASN,GAAA,CAAA3B,YAAA,EAAc;QAAA,EAAC;QAACY,EAAA,CAAAiB,MAAA,eAAQ;QAE7CjB,EAF6C,CAAAkB,YAAA,EAAS,EAC9C,EACC;QAILlB,EAFJ,CAAAgB,cAAA,aAA+B,cACA,UACvB;QAAAhB,EAAA,CAAAiB,MAAA,sBAAc;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QACvBlB,EAAA,CAAAgB,cAAA,cAA0B;QACxBhB,EAAA,CAAAsB,SAAA,0BAMmB;;QAEnBtB,EAAA,CAAAsB,SAAA,0BAMmB;;QAEnBtB,EAAA,CAAAsB,SAAA,0BAMmB;;QAEnBtB,EAAA,CAAAsB,SAAA,2BAImB;;QAEnBtB,EAAA,CAAAsB,SAAA,2BAImB;;QAEvBtB,EADE,CAAAkB,YAAA,EAAM,EACF;QAGJlB,EADF,CAAAgB,cAAA,eAA4B,UACtB;QAAAhB,EAAA,CAAAiB,MAAA,qBAAa;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAEpBlB,EADF,CAAAgB,cAAA,eAA2B,kBAGI;QAA3BhB,EAAA,CAAAmB,UAAA,mBAAAI,qDAAA;UAAA,OAASR,GAAA,CAAA/B,YAAA,CAAa,EAAE,CAAC;QAAA,EAAC;QAACgB,EAAA,CAAAiB,MAAA,WAAG;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QACzClB,EAAA,CAAAgB,cAAA,kBAEqC;QAAnChB,EAAA,CAAAmB,UAAA,mBAAAK,qDAAA;UAAA,OAAST,GAAA,CAAA/B,YAAA,CAAa,UAAU,CAAC;QAAA,EAAC;QAACgB,EAAA,CAAAiB,MAAA,gBAAQ;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QACtDlB,EAAA,CAAAgB,cAAA,kBAEoC;QAAlChB,EAAA,CAAAmB,UAAA,mBAAAM,qDAAA;UAAA,OAASV,GAAA,CAAA/B,YAAA,CAAa,SAAS,CAAC;QAAA,EAAC;QAACgB,EAAA,CAAAiB,MAAA,eAAO;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QACpDlB,EAAA,CAAAgB,cAAA,kBAEiC;QAA/BhB,EAAA,CAAAmB,UAAA,mBAAAO,qDAAA;UAAA,OAASX,GAAA,CAAA/B,YAAA,CAAa,MAAM,CAAC;QAAA,EAAC;QAACgB,EAAA,CAAAiB,MAAA,YAAI;QACvCjB,EADuC,CAAAkB,YAAA,EAAS,EAC1C;QACNlB,EAAA,CAAAgB,cAAA,0BAGC;;QADChB,EAAA,CAAAmB,UAAA,yBAAAQ,mEAAAC,MAAA;UAAA,OAAeb,GAAA,CAAA7B,gBAAA,CAAA0C,MAAA,CAAwB;QAAA,EAAC;QAE5C5B,EADG,CAAAkB,YAAA,EAAiB,EACd;QAGJlB,EADF,CAAAgB,cAAA,eAAgC,UAC1B;QAAAhB,EAAA,CAAAiB,MAAA,sBAAc;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAGnBlB,EAFJ,CAAAgB,cAAA,eAA6B,eACE,UACvB;QAAAhB,EAAA,CAAAiB,MAAA,qBAAa;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAEpBlB,EADF,CAAAgB,cAAA,eAAwB,iBACI;QAAAhB,EAAA,CAAAiB,MAAA,2BAAmB;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACrDlB,EAAA,CAAAgB,cAAA,iBAAsF;QAA/ChB,EAAA,CAAA6B,gBAAA,2BAAAC,4DAAAF,MAAA;UAAA5B,EAAA,CAAA+B,kBAAA,CAAAhB,GAAA,CAAAvC,eAAA,EAAAoD,MAAA,MAAAb,GAAA,CAAAvC,eAAA,GAAAoD,MAAA;UAAA,OAAAA,MAAA;QAAA,EAA6B;QACtE5B,EADE,CAAAkB,YAAA,EAAsF,EAClF;QACNlB,EAAA,CAAAgB,cAAA,kBAA+D;QAA5BhB,EAAA,CAAAmB,UAAA,mBAAAa,qDAAA;UAAA,OAASjB,GAAA,CAAAzB,eAAA,EAAiB;QAAA,EAAC;QAACU,EAAA,CAAAiB,MAAA,gBAAQ;QACzEjB,EADyE,CAAAkB,YAAA,EAAS,EAC5E;QAGJlB,EADF,CAAAgB,cAAA,eAA6B,UACvB;QAAAhB,EAAA,CAAAiB,MAAA,wBAAgB;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAEvBlB,EADF,CAAAgB,cAAA,eAAwB,iBACG;QAAAhB,EAAA,CAAAiB,MAAA,kBAAU;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC3ClB,EAAA,CAAAgB,cAAA,iBAAqF;QAA/ChB,EAAA,CAAA6B,gBAAA,2BAAAI,4DAAAL,MAAA;UAAA5B,EAAA,CAAA+B,kBAAA,CAAAhB,GAAA,CAAAtC,cAAA,EAAAmD,MAAA,MAAAb,GAAA,CAAAtC,cAAA,GAAAmD,MAAA;UAAA,OAAAA,MAAA;QAAA,EAA4B;QACpE5B,EADE,CAAAkB,YAAA,EAAqF,EACjF;QAEJlB,EADF,CAAAgB,cAAA,eAAwB,iBACO;QAAAhB,EAAA,CAAAiB,MAAA,2BAAmB;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACxDlB,EAAA,CAAAgB,cAAA,iBAA4F;QAAlDhB,EAAA,CAAA6B,gBAAA,2BAAAK,4DAAAN,MAAA;UAAA5B,EAAA,CAAA+B,kBAAA,CAAAhB,GAAA,CAAArC,kBAAA,EAAAkD,MAAA,MAAAb,GAAA,CAAArC,kBAAA,GAAAkD,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAgC;QAC5E5B,EADE,CAAAkB,YAAA,EAA4F,EACxF;QACNlB,EAAA,CAAAgB,cAAA,kBAAkE;QAA/BhB,EAAA,CAAAmB,UAAA,mBAAAgB,qDAAA;UAAA,OAASpB,GAAA,CAAAjB,kBAAA,EAAoB;QAAA,EAAC;QAACE,EAAA,CAAAiB,MAAA,gBAAQ;QAC5EjB,EAD4E,CAAAkB,YAAA,EAAS,EAC/E;QAGJlB,EADF,CAAAgB,cAAA,eAA6B,UACvB;QAAAhB,EAAA,CAAAiB,MAAA,wBAAgB;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAEvBlB,EADF,CAAAgB,cAAA,eAAwB,iBACE;QAAAhB,EAAA,CAAAiB,MAAA,mBAAW;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC3ClB,EAAA,CAAAgB,cAAA,kBAAgD;QAAxBhB,EAAA,CAAA6B,gBAAA,2BAAAO,6DAAAR,MAAA;UAAA5B,EAAA,CAAA+B,kBAAA,CAAAhB,GAAA,CAAApC,SAAA,EAAAiD,MAAA,MAAAb,GAAA,CAAApC,SAAA,GAAAiD,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAuB;QAC7C5B,EAAA,CAAAgB,cAAA,kBAAuB;QAAAhB,EAAA,CAAAiB,MAAA,0BAAkB;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QAClDlB,EAAA,CAAAgB,cAAA,kBAAuB;QAAAhB,EAAA,CAAAiB,MAAA,0BAAkB;QAE7CjB,EAF6C,CAAAkB,YAAA,EAAS,EAC3C,EACL;QACNlB,EAAA,CAAAgB,cAAA,kBAA6D;QAA1BhB,EAAA,CAAAmB,UAAA,mBAAAkB,qDAAA;UAAA,OAAStB,GAAA,CAAAhB,aAAA,EAAe;QAAA,EAAC;QAACC,EAAA,CAAAiB,MAAA,sBAAc;QAKrFjB,EALqF,CAAAkB,YAAA,EAAS,EAChF,EACF,EACF,EACF,EACF;;;;;;;;QAjGIlB,EAAA,CAAAsC,SAAA,IAA4C;QAG5CtC,EAHA,CAAAuC,UAAA,YAAAC,OAAA,GAAAxC,EAAA,CAAAyC,WAAA,SAAA1B,GAAA,CAAA3C,QAAA,oBAAAoE,OAAA,CAAAE,SAAA,OAA4C,wBAErB,yBACC;QAKxB1C,EAAA,CAAAsC,SAAA,GAA+C;QAG/CtC,EAHA,CAAAuC,UAAA,YAAAI,OAAA,GAAA3C,EAAA,CAAAyC,WAAA,SAAA1B,GAAA,CAAA3C,QAAA,oBAAAuE,OAAA,CAAAC,YAAA,OAA+C,wBAExB,yBACC;QAKxB5C,EAAA,CAAAsC,SAAA,GAA6C;QAG7CtC,EAHA,CAAAuC,UAAA,YAAAM,OAAA,GAAA7C,EAAA,CAAAyC,WAAA,SAAA1B,GAAA,CAAA3C,QAAA,oBAAAyE,OAAA,CAAAC,UAAA,OAA6C,wBAEtB,yBACC;QAKxB9C,EAAA,CAAAsC,SAAA,GAA2E;QAA3EtC,EAAA,CAAAuC,UAAA,aAAAQ,OAAA,GAAA/C,EAAA,CAAAyC,WAAA,SAAA1B,GAAA,CAAA3C,QAAA,oBAAA2E,OAAA,CAAAC,UAAA,kBAAAD,OAAA,CAAAC,UAAA,CAAAC,UAAA,wBAA2E;QAM3EjD,EAAA,CAAAsC,SAAA,GAA+E;QAA/EtC,EAAA,CAAAuC,UAAA,aAAAW,QAAA,GAAAlD,EAAA,CAAAyC,WAAA,SAAA1B,GAAA,CAAA3C,QAAA,oBAAA8E,QAAA,CAAAF,UAAA,kBAAAE,QAAA,CAAAF,UAAA,CAAAG,cAAA,wBAA+E;QAU/EnD,EAAA,CAAAsC,SAAA,GAAoD;QAApDtC,EAAA,CAAAuC,UAAA,YAAAvC,EAAA,CAAAoD,eAAA,KAAAC,GAAA,EAAAtC,GAAA,CAAAzC,qBAAA,SAAoD;QAGpD0B,EAAA,CAAAsC,SAAA,GAA4D;QAA5DtC,EAAA,CAAAuC,UAAA,YAAAvC,EAAA,CAAAoD,eAAA,KAAAC,GAAA,EAAAtC,GAAA,CAAAzC,qBAAA,iBAA4D;QAG5D0B,EAAA,CAAAsC,SAAA,GAA2D;QAA3DtC,EAAA,CAAAuC,UAAA,YAAAvC,EAAA,CAAAoD,eAAA,KAAAC,GAAA,EAAAtC,GAAA,CAAAzC,qBAAA,gBAA2D;QAG3D0B,EAAA,CAAAsC,SAAA,GAAwD;QAAxDtC,EAAA,CAAAuC,UAAA,YAAAvC,EAAA,CAAAoD,eAAA,KAAAC,GAAA,EAAAtC,GAAA,CAAAzC,qBAAA,aAAwD;QAI1D0B,EAAA,CAAAsC,SAAA,GAA2B;QAA3BtC,EAAA,CAAAuC,UAAA,WAAAvC,EAAA,CAAAyC,WAAA,SAAA1B,GAAA,CAAA1C,OAAA,EAA2B;QAYgB2B,EAAA,CAAAsC,SAAA,IAA6B;QAA7BtC,EAAA,CAAAsD,gBAAA,YAAAvC,GAAA,CAAAvC,eAAA,CAA6B;QAE9DwB,EAAA,CAAAsC,SAAA,EAA0B;QAA1BtC,EAAA,CAAAuC,UAAA,aAAAxB,GAAA,CAAAxC,aAAA,CAA0B;QAOMyB,EAAA,CAAAsC,SAAA,GAA4B;QAA5BtC,EAAA,CAAAsD,gBAAA,YAAAvC,GAAA,CAAAtC,cAAA,CAA4B;QAIxBuB,EAAA,CAAAsC,SAAA,GAAgC;QAAhCtC,EAAA,CAAAsD,gBAAA,YAAAvC,GAAA,CAAArC,kBAAA,CAAgC;QAEpEsB,EAAA,CAAAsC,SAAA,EAA0B;QAA1BtC,EAAA,CAAAuC,UAAA,aAAAxB,GAAA,CAAAxC,aAAA,CAA0B;QAORyB,EAAA,CAAAsC,SAAA,GAAuB;QAAvBtC,EAAA,CAAAsD,gBAAA,YAAAvC,GAAA,CAAApC,SAAA,CAAuB;QAKzCqB,EAAA,CAAAsC,SAAA,GAA0B;QAA1BtC,EAAA,CAAAuC,UAAA,aAAAxB,GAAA,CAAAxC,aAAA,CAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}