{"ast":null,"code":"import { BehaviorSubject, interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class MetricsService {\n  apiService;\n  metricsSubject = new BehaviorSubject(null);\n  refreshInterval = 10000; // 10 seconds\n  metrics$ = this.metricsSubject.asObservable();\n  constructor(apiService) {\n    this.apiService = apiService;\n    // Set up automatic polling for metrics\n    this.setupMetricsPolling();\n  }\n  setupMetricsPolling() {\n    interval(this.refreshInterval).pipe(switchMap(() => this.apiService.getMetrics())).subscribe({\n      next: metrics => this.metricsSubject.next(metrics),\n      error: error => console.error('Error fetching metrics:', error)\n    });\n    // Initial fetch\n    this.refreshMetrics();\n  }\n  refreshMetrics() {\n    this.apiService.getMetrics().subscribe({\n      next: metrics => this.metricsSubject.next(metrics),\n      error: error => console.error('Error fetching metrics:', error)\n    });\n  }\n  setRefreshInterval(intervalMs) {\n    this.refreshInterval = intervalMs;\n    this.setupMetricsPolling();\n  }\n  static ɵfac = function MetricsService_Factory(t) {\n    return new (t || MetricsService)(i0.ɵɵinject(i1.ApiService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MetricsService,\n    factory: MetricsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","interval","switchMap","MetricsService","apiService","metricsSubject","refreshInterval","metrics$","asObservable","constructor","setupMetricsPolling","pipe","getMetrics","subscribe","next","metrics","error","console","refreshMetrics","setRefreshInterval","intervalMs","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["/home/kiran/Desktop/Mthree-Notes/sre-app-angular/angular-ui/src/app/core/services/metrics.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { BehaviorSubject, Observable, interval } from 'rxjs';\nimport { switchMap, shareReplay } from 'rxjs/operators';\nimport { SystemMetrics } from '../models/metric.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetricsService {\n  private metricsSubject = new BehaviorSubject<SystemMetrics | null>(null);\n  private refreshInterval = 10000; // 10 seconds\n  \n  metrics$ = this.metricsSubject.asObservable();\n  \n  constructor(private apiService: ApiService) {\n    // Set up automatic polling for metrics\n    this.setupMetricsPolling();\n  }\n  \n  private setupMetricsPolling(): void {\n    interval(this.refreshInterval)\n      .pipe(\n        switchMap(() => this.apiService.getMetrics())\n      )\n      .subscribe({\n        next: (metrics) => this.metricsSubject.next(metrics),\n        error: (error) => console.error('Error fetching metrics:', error)\n      });\n      \n    // Initial fetch\n    this.refreshMetrics();\n  }\n  \n  refreshMetrics(): void {\n    this.apiService.getMetrics().subscribe({\n      next: (metrics) => this.metricsSubject.next(metrics),\n      error: (error) => console.error('Error fetching metrics:', error)\n    });\n  }\n  \n  setRefreshInterval(intervalMs: number): void {\n    this.refreshInterval = intervalMs;\n    this.setupMetricsPolling();\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,EAAcC,QAAQ,QAAQ,MAAM;AAC5D,SAASC,SAAS,QAAqB,gBAAgB;;;AAMvD,OAAM,MAAOC,cAAc;EAMLC,UAAA;EALZC,cAAc,GAAG,IAAIL,eAAe,CAAuB,IAAI,CAAC;EAChEM,eAAe,GAAG,KAAK,CAAC,CAAC;EAEjCC,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACG,YAAY,EAAE;EAE7CC,YAAoBL,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAC5B;IACA,IAAI,CAACM,mBAAmB,EAAE;EAC5B;EAEQA,mBAAmBA,CAAA;IACzBT,QAAQ,CAAC,IAAI,CAACK,eAAe,CAAC,CAC3BK,IAAI,CACHT,SAAS,CAAC,MAAM,IAAI,CAACE,UAAU,CAACQ,UAAU,EAAE,CAAC,CAC9C,CACAC,SAAS,CAAC;MACTC,IAAI,EAAGC,OAAO,IAAK,IAAI,CAACV,cAAc,CAACS,IAAI,CAACC,OAAO,CAAC;MACpDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;KACjE,CAAC;IAEJ;IACA,IAAI,CAACE,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACd,UAAU,CAACQ,UAAU,EAAE,CAACC,SAAS,CAAC;MACrCC,IAAI,EAAGC,OAAO,IAAK,IAAI,CAACV,cAAc,CAACS,IAAI,CAACC,OAAO,CAAC;MACpDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;KACjE,CAAC;EACJ;EAEAG,kBAAkBA,CAACC,UAAkB;IACnC,IAAI,CAACd,eAAe,GAAGc,UAAU;IACjC,IAAI,CAACV,mBAAmB,EAAE;EAC5B;;qBAnCWP,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}