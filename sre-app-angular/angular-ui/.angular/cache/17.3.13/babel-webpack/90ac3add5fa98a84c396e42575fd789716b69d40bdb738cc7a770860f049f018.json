{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/metrics.service\";\nimport * as i2 from \"../../core/services/alerts.service\";\nimport * as i3 from \"../../core/services/api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../shared/components/metric-card/metric-card.component\";\nimport * as i7 from \"../../shared/components/alert-list/alert-list.component\";\nconst _c0 = a0 => ({\n  \"active\": a0\n});\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    metricsService;\n    alertsService;\n    apiService;\n    metrics$;\n    alerts$;\n    currentSeverityFilter = '';\n    isTestRunning = false;\n    // Simulation controls\n    cpuTestDuration = 5;\n    memoryTestSize = 10;\n    memoryTestDuration = 5;\n    errorType = 'client';\n    constructor(metricsService, alertsService, apiService) {\n      this.metricsService = metricsService;\n      this.alertsService = alertsService;\n      this.apiService = apiService;\n      this.metrics$ = this.metricsService.metrics$;\n      this.alerts$ = this.alertsService.alerts$;\n    }\n    ngOnInit() {\n      // Initial data fetch\n      this.refreshMetrics();\n      this.alertsService.refreshAlerts();\n    }\n    refreshMetrics() {\n      this.metricsService.refreshMetrics();\n    }\n    filterAlerts(severity) {\n      this.currentSeverityFilter = severity;\n      this.alertsService.refreshAlerts(severity);\n    }\n    acknowledgeAlert(alertId) {\n      this.alertsService.acknowledgeAlert(alertId);\n    }\n    openSettings() {\n      // In a real app, this would open a settings dialog\n      alert('Settings functionality would go here');\n    }\n    simulateCpuLoad() {\n      this.isTestRunning = true;\n      this.apiService.simulateCpuLoad(this.cpuTestDuration).subscribe({\n        next: response => {\n          console.log('CPU test response:', response);\n          this.isTestRunning = false;\n          // Refresh metrics after test\n          setTimeout(() => this.refreshMetrics(), 1000);\n        },\n        error: error => {\n          console.error('CPU test error:', error);\n          this.isTestRunning = false;\n        }\n      });\n    }\n    simulateMemoryLoad() {\n      this.isTestRunning = true;\n      this.apiService.simulateMemoryLoad(this.memoryTestSize, this.memoryTestDuration).subscribe({\n        next: response => {\n          console.log('Memory test response:', response);\n          this.isTestRunning = false;\n          // Refresh metrics after test\n          setTimeout(() => this.refreshMetrics(), 1000);\n        },\n        error: error => {\n          console.error('Memory test error:', error);\n          this.isTestRunning = false;\n        }\n      });\n    }\n    simulateError() {\n      this.isTestRunning = true;\n      this.apiService.simulateError(this.errorType).subscribe({\n        next: response => {\n          // This shouldn't happen\n          console.log('Error simulation response:', response);\n          this.isTestRunning = false;\n        },\n        error: error => {\n          console.log('Error simulated successfully:', error);\n          this.isTestRunning = false;\n          // Refresh alerts after error\n          setTimeout(() => this.alertsService.refreshAlerts(), 1000);\n        }\n      });\n    }\n    static ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MetricsService), i0.ɵɵdirectiveInject(i2.AlertsService), i0.ɵɵdirectiveInject(i3.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 77,\n      vars: 43,\n      consts: [[1, \"dashboard-container\"], [1, \"dashboard-header\"], [1, \"actions\"], [3, \"click\"], [1, \"dashboard-content\"], [1, \"metrics-section\"], [1, \"metrics-grid\"], [\"title\", \"CPU Usage\", \"unit\", \"%\", 3, \"value\", \"thresholdWarning\", \"thresholdCritical\"], [\"title\", \"Memory Usage\", \"unit\", \"%\", 3, \"value\", \"thresholdWarning\", \"thresholdCritical\"], [\"title\", \"Disk Usage\", \"unit\", \"%\", 3, \"value\", \"thresholdWarning\", \"thresholdCritical\"], [\"title\", \"Network Sent\", \"unit\", \"MB\", 3, \"value\"], [\"title\", \"Network Received\", \"unit\", \"MB\", 3, \"value\"], [1, \"alerts-section\"], [1, \"alerts-filter\"], [3, \"click\", \"ngClass\"], [3, \"acknowledge\", \"alerts\"], [1, \"simulation-section\"], [1, \"simulation-grid\"], [1, \"simulation-card\"], [1, \"form-group\"], [\"for\", \"cpu-duration\"], [\"id\", \"cpu-duration\", \"type\", \"number\", \"min\", \"1\", \"max\", \"30\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\", \"disabled\"], [\"for\", \"memory-size\"], [\"id\", \"memory-size\", \"type\", \"number\", \"min\", \"1\", \"max\", \"100\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"memory-duration\"], [\"id\", \"memory-duration\", \"type\", \"number\", \"min\", \"1\", \"max\", \"30\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"error-type\"], [\"id\", \"error-type\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"client\"], [\"value\", \"server\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"SRE Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_5_listener() {\n            return ctx.refreshMetrics();\n          });\n          i0.ɵɵtext(6, \"Refresh Metrics\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n            return ctx.openSettings();\n          });\n          i0.ɵɵtext(8, \"Settings\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"h2\");\n          i0.ɵɵtext(12, \"System Metrics\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 6);\n          i0.ɵɵelement(14, \"app-metric-card\", 7);\n          i0.ɵɵpipe(15, \"async\");\n          i0.ɵɵelement(16, \"app-metric-card\", 8);\n          i0.ɵɵpipe(17, \"async\");\n          i0.ɵɵelement(18, \"app-metric-card\", 9);\n          i0.ɵɵpipe(19, \"async\");\n          i0.ɵɵelement(20, \"app-metric-card\", 10);\n          i0.ɵɵpipe(21, \"async\");\n          i0.ɵɵelement(22, \"app-metric-card\", 11);\n          i0.ɵɵpipe(23, \"async\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\", 12)(25, \"h2\");\n          i0.ɵɵtext(26, \"Recent Alerts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 13)(28, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_28_listener() {\n            return ctx.filterAlerts(\"\");\n          });\n          i0.ɵɵtext(29, \"All\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_30_listener() {\n            return ctx.filterAlerts(\"critical\");\n          });\n          i0.ɵɵtext(31, \"Critical\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_32_listener() {\n            return ctx.filterAlerts(\"warning\");\n          });\n          i0.ɵɵtext(33, \"Warning\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_34_listener() {\n            return ctx.filterAlerts(\"info\");\n          });\n          i0.ɵɵtext(35, \"Info\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"app-alert-list\", 15);\n          i0.ɵɵpipe(37, \"async\");\n          i0.ɵɵlistener(\"acknowledge\", function DashboardComponent_Template_app_alert_list_acknowledge_36_listener($event) {\n            return ctx.acknowledgeAlert($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 16)(39, \"h2\");\n          i0.ɵɵtext(40, \"Test Utilities\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"div\", 17)(42, \"div\", 18)(43, \"h3\");\n          i0.ɵɵtext(44, \"CPU Load Test\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"div\", 19)(46, \"label\", 20);\n          i0.ɵɵtext(47, \"Duration (seconds):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"input\", 21);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_48_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cpuTestDuration, $event) || (ctx.cpuTestDuration = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(49, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_49_listener() {\n            return ctx.simulateCpuLoad();\n          });\n          i0.ɵɵtext(50, \"Run Test\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(51, \"div\", 18)(52, \"h3\");\n          i0.ɵɵtext(53, \"Memory Load Test\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"div\", 19)(55, \"label\", 23);\n          i0.ɵɵtext(56, \"Size (MB):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"input\", 24);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_57_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.memoryTestSize, $event) || (ctx.memoryTestSize = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(58, \"div\", 19)(59, \"label\", 25);\n          i0.ɵɵtext(60, \"Duration (seconds):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"input\", 26);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_61_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.memoryTestDuration, $event) || (ctx.memoryTestDuration = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(62, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_62_listener() {\n            return ctx.simulateMemoryLoad();\n          });\n          i0.ɵɵtext(63, \"Run Test\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(64, \"div\", 18)(65, \"h3\");\n          i0.ɵɵtext(66, \"Error Simulation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(67, \"div\", 19)(68, \"label\", 27);\n          i0.ɵɵtext(69, \"Error Type:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(70, \"select\", 28);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_70_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.errorType, $event) || (ctx.errorType = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(71, \"option\", 29);\n          i0.ɵɵtext(72, \"Client Error (400)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(73, \"option\", 30);\n          i0.ɵɵtext(74, \"Server Error (500)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(75, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_75_listener() {\n            return ctx.simulateError();\n          });\n          i0.ɵɵtext(76, \"Simulate Error\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_0_0;\n          let tmp_3_0;\n          let tmp_6_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"value\", ((tmp_0_0 = i0.ɵɵpipeBind1(15, 23, ctx.metrics$)) == null ? null : tmp_0_0.cpu_usage) || 0)(\"thresholdWarning\", 70)(\"thresholdCritical\", 90);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ((tmp_3_0 = i0.ɵɵpipeBind1(17, 25, ctx.metrics$)) == null ? null : tmp_3_0.memory_usage) || 0)(\"thresholdWarning\", 80)(\"thresholdCritical\", 95);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ((tmp_6_0 = i0.ɵɵpipeBind1(19, 27, ctx.metrics$)) == null ? null : tmp_6_0.disk_usage) || 0)(\"thresholdWarning\", 75)(\"thresholdCritical\", 90);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", (((tmp_9_0 = i0.ɵɵpipeBind1(21, 29, ctx.metrics$)) == null ? null : tmp_9_0.network_io == null ? null : tmp_9_0.network_io.sent_bytes) || 0) / (1024 * 1024));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", (((tmp_10_0 = i0.ɵɵpipeBind1(23, 31, ctx.metrics$)) == null ? null : tmp_10_0.network_io == null ? null : tmp_10_0.network_io.received_bytes) || 0) / (1024 * 1024));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(35, _c0, ctx.currentSeverityFilter === \"\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(37, _c0, ctx.currentSeverityFilter === \"critical\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(39, _c0, ctx.currentSeverityFilter === \"warning\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(41, _c0, ctx.currentSeverityFilter === \"info\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"alerts\", i0.ɵɵpipeBind1(37, 33, ctx.alerts$));\n          i0.ɵɵadvance(12);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cpuTestDuration);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isTestRunning);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.memoryTestSize);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.memoryTestDuration);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isTestRunning);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.errorType);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.isTestRunning);\n        }\n      },\n      dependencies: [i4.NgClass, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.MinValidator, i5.MaxValidator, i5.NgModel, i6.MetricCardComponent, i7.AlertListComponent, i4.AsyncPipe],\n      styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:16px;max-width:1200px;margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:24px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin:0}.actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-left:8px;padding:8px 16px;background-color:#2196f3;color:#fff;border:none;border-radius:4px;cursor:pointer}.metrics-section[_ngcontent-%COMP%], .alerts-section[_ngcontent-%COMP%], .simulation-section[_ngcontent-%COMP%]{margin-bottom:32px}.metrics-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .alerts-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .simulation-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;font-size:20px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));gap:16px}.alerts-filter[_ngcontent-%COMP%]{margin-bottom:16px}.alerts-filter[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:8px;padding:4px 12px;background-color:#f0f0f0;border:1px solid #ddd;border-radius:4px;cursor:pointer}.alerts-filter[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#2196f3;color:#fff;border-color:#2196f3}.simulation-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(300px,1fr));gap:16px}.simulation-card[_ngcontent-%COMP%]{padding:16px;background-color:#f9f9f9;border-radius:8px;border:1px solid #eee}.simulation-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;font-size:16px}.form-group[_ngcontent-%COMP%]{margin-bottom:12px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:4px;font-size:14px}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{width:100%;padding:8px;border:1px solid #ddd;border-radius:4px}.simulation-card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;padding:8px 16px;background-color:#4caf50;color:#fff;border:none;border-radius:4px;cursor:pointer}.simulation-card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}\"]\n    });\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}