# Dockerfile for Angular App
FROM node:18 as build

WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application
COPY . .

# Build the application
RUN npm run build --prod

# Production stage
FROM nginx:alpine

# Copy the build output to replace the default nginx contents
COPY --from=build /app/dist/sre-dashboard /usr/share/nginx/html

# Copy our custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]

# nginx.conf should be created with the following content
# ---
# server {
#     listen 80;
#     server_name localhost;
#     root /usr/share/nginx/html;
#     index index.html;
# 
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
# 
#     # Forward API requests to the backend service
#     location /api/ {
#         proxy_pass http://flask-api-service:5000/api/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }
# }
# ---

# Kubernetes deployment file
# Save this as angular-ui-deployment.yaml
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: angular-ui
#   namespace: sre-monitoring
#   labels:
#     app: angular-ui
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: angular-ui
#   template:
#     metadata:
#       labels:
#         app: angular-ui
#     spec:
#       containers:
#       - name: angular-ui
#         image: angular-ui:latest
#         imagePullPolicy: IfNotPresent
#         ports:
#         - containerPort: 80
#         resources:
#           requests:
#             cpu: 100m
#             memory: 128Mi
#           limits:
#             cpu: 200m
#             memory: 256Mi
#         livenessProbe:
#           httpGet:
#             path: /
#             port: 80
#           initialDelaySeconds: 30
#           periodSeconds: 20
#         readinessProbe:
#           httpGet:
#             path: /
#             port: 80
#           initialDelaySeconds: 10
#           periodSeconds: 10
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: angular-ui-service
#   namespace: sre-monitoring
# spec:
#   selector:
#     app: angular-ui
#   ports:
#   - port: 80
#     targetPort: 80
#   type: ClusterIP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: sre-app-ingress
#   namespace: sre-monitoring
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: angular-ui-service
#             port:
#               number: 80
# ---
